{"version":3,"sources":["imgs/logo.png","components/card.js","components/form-group.js","app/apiservice.js","app/service/usuarioService.js","components/toastr.js","app/service/localstorageService.js","app/service/authService.js","main/provedorAutenticacao.js","views/login.js","views/cadastroUsuario.js","app/service/alunoService.js","views/home.js","components/selectMenu.js","views/presencas/presencasTable.js","app/service/presencaService.js","views/presencas/registro-presencas.js","main/rotas.js","components/navbarItem.js","components/navbar.js","main/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","React","Component","render","createElement","className","this","props","title","children","FormGroup","htmlFor","label","httpClient","axios","create","baseURL","ApiService","constructor","apiurl","post","url","objeto","requestUrl","concat","put","get","UsuarioService","super","autenticar","credenciais","salvar","usuario","mostrarMensagem","titulo","mensagem","tipo","toastr","mensagemErro","mensagemSucesso","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","LocalStorageService","[object Object]","chave","valor","localStorage","setItem","JSON","stringify","getItem","item","parse","removeItem","USUARIO_LOGADO","AuthService","obterItem","id","removerItem","adicionarItem","obterItemJSON","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","arguments","state","usuarioAutenticado","isAutenticado","iniciarSessao","logar","setState","encerrarSessao","removerUsuarioAutenticado","componentDidMount","obterUsuarioAutenticado","contexto","value","Login","email","senha","entrar","service","then","response","context","data","history","push","catch","erro","prepareCadastrar","style","position","left","type","onChange","e","target","aria-describedby","placeholder","onClick","contextType","withRouter","nome","senhaRepeticao","cadastrar","msgs","validar","length","error","cancelar","match","name","AlunoService","consultar","Home","frequencia","professor","usuarioLogado","obterUsuarioAutenticadoJSON","href","role","lista","map","option","index","key","rows","alunos","aluno","turma","String","presente","marcarAction","motivo","disabled","infoAction","scope","PresencaService","obterListaTurmas","obterListaMotivos","obterPorId","atualizaStatus","chamadaFiltro","params","atualizar","chamada","RegistroPresencas","dataSelecionada","dataFormatada","showInfoDialog","disableOutro","alunoInformar","realizar","messages","console","log","marcar","indexOf","salvaInfo","abrirInfo","input","year","month","day","split","fecharInfo","setMotivo","event","handleChange","footerContent","turmas","motivos","SelectMenu","PresencasTable","Dialog","header","visible","width","onHide","footer","RotaAutenticada","_ref","component","isUsuarioAutenticado","Route","Object","assign","componentProps","Redirect","to","pathname","from","location","Rotas","HashRouter","Switch","path","CadastroUsuario","rotas","NavBarItem","NavBar","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","deslogar","navbar","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.386de0d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d5a2c6b1.png\";","import React from 'react'\r\n\r\nclass Card extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"card md-3\">\r\n                <h3 className=\"card-header\">{this.props.title}</h3>\r\n                    <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card ","import React from 'react'\r\n\r\nfunction FormGroup(props) {\r\n    return (\r\n        <div className=\"form-group\">\r\n                      <label htmlFor={props.htmlFor}>{props.label}</label>\r\n                      {props.children}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default FormGroup    ","import axios from \"axios\";\r\n\r\nconst httpClient = axios.create({\r\n    baseURL: 'http://localhost:8080'\r\n\r\n})\r\n\r\nclass ApiService {\r\n\r\n    constructor(apiurl){\r\n    this.apiurl = apiurl;\r\n    }\r\n\r\n    post(url, objeto){\r\n        const requestUrl = `${this.apiurl}${url}`\r\n        return httpClient.post(requestUrl, objeto);\r\n    }\r\n\r\n    put(url, objeto){\r\n        const requestUrl = `${this.apiurl}${url}`\r\n        return httpClient.put(requestUrl, objeto);\r\n    }\r\n\r\n    get(url){\r\n        const requestUrl = `${this.apiurl}${url}`\r\n        return httpClient.get(requestUrl);\r\n    }\r\n}\r\n\r\nexport default ApiService;","import ApiService from \"../apiservice\";\r\n\r\nclass UsuarioService extends ApiService{\r\n\r\n    constructor(){\r\n        super('/api/usuarios')\r\n    }\r\n    autenticar(credenciais){\r\n        return this.post('/autenticar', credenciais)\r\n    }\r\n    salvar(usuario){\r\n        return this.post('', usuario)\r\n    }\r\n    \r\n}\r\n\r\nexport default UsuarioService","import toastr from \"toastr\"\r\n\r\ntoastr.options = {\r\n    \"closeButton\": true,\r\n    \"debug\": false,\r\n    \"newestOnTop\": false,\r\n    \"progressBar\": true,\r\n    \"positionClass\": \"toast-top-center\",\r\n    \"preventDuplicates\": false,\r\n    \"onclick\": null,\r\n    \"showDuration\": \"300\",\r\n    \"hideDuration\": \"1000\",\r\n    \"timeOut\": \"5000\",\r\n    \"extendedTimeOut\": \"1000\",\r\n    \"showEasing\": \"swing\",\r\n    \"hideEasing\": \"linear\",\r\n    \"showMethod\": \"fadeIn\",\r\n    \"hideMethod\": \"fadeOut\"\r\n  }\r\n\r\n  export function mostrarMensagem(titulo, mensagem, tipo){\r\n    toastr[tipo](mensagem, titulo)\r\n  }\r\n\r\n  export function mensagemErro(mensagem){\r\n    mostrarMensagem('Erro', mensagem, 'error')\r\n  }\r\n  export function mensagemSucesso(mensagem){\r\n    mostrarMensagem('Sucesso', mensagem, 'success')\r\n  }\r\n  export function mensagmeAlerta(mensagem){\r\n    mostrarMensagem('Alerta', mensagem, 'warning')\r\n  }","class LocalStorageService {\r\n\r\n    static adicionarItem(chave, valor){\r\n        localStorage.setItem(chave, JSON.stringify(valor));\r\n    }\r\n\r\n    static obterItem(chave){\r\n        return localStorage.getItem(chave);\r\n    }\r\n\r\n    static obterItemJSON(chave){\r\n        const item = localStorage.getItem(chave);\r\n        return JSON.parse(item);\r\n    }\r\n\r\n    static removerItem(chave){\r\n        localStorage.removeItem(chave);\r\n    }\r\n\r\n}\r\n\r\nexport default LocalStorageService ","import LocalStorageService from \"./localstorageService\";\r\n\r\nexport const USUARIO_LOGADO = '_usuario_logado'\r\nexport default class AuthService{\r\n\r\n    static isUsuarioAutenticado(){\r\n        const usuario = LocalStorageService.obterItem(USUARIO_LOGADO)\r\n        return usuario && usuario.id;\r\n    }\r\n\r\n    static removerUsuarioAutenticado(){\r\n         LocalStorageService.removerItem(USUARIO_LOGADO)        \r\n    }\r\n    \r\n    static logar(usuario){\r\n        LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario)\r\n    }\r\n\r\n    static obterUsuarioAutenticado(){\r\n      return LocalStorageService.obterItem(USUARIO_LOGADO);\r\n    }\r\n\r\n    static obterUsuarioAutenticadoJSON(){\r\n        return LocalStorageService.obterItemJSON(USUARIO_LOGADO);\r\n    }\r\n}","import React from \"react\";\r\nimport AuthService from \"../app/service/authService\";\r\n\r\nexport const AuthContext = React.createContext();\r\nexport const AuthConsumer = AuthContext.Consumer;\r\n\r\nconst AuthProvider = AuthContext.Provider;\r\n\r\nclass ProvedorAutenticacao extends React.Component{\r\n\r\n    state = {\r\n        usuarioAutenticado: null,\r\n        isAutenticado: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(AuthService.obterUsuarioAutenticado()){     \r\n                   \r\n            this.setState({ isAutenticado: true, usuarioAutenticado: AuthService.obterUsuarioAutenticado()})\r\n        }       \r\n     }\r\n    iniciarSessao = (usuario) => {\r\n        AuthService.logar(usuario);\r\n        this.setState({\r\n            usuarioAutenticado: usuario,\r\n            isAutenticado: true\r\n        })\r\n    }\r\n    \r\n    encerrarSessao = () => {\r\n        AuthService.removerUsuarioAutenticado();\r\n        this.setState({\r\n            usuarioAutenticado: null,\r\n            isAutenticado: false\r\n        })   \r\n    }\r\n\r\n    render(){\r\n\r\n        const contexto = {\r\n            usuarioAutenticado: this.state.usuarioAutenticado,\r\n            isAutenticado: this.state.isAutenticado,\r\n            iniciarSessao: this.iniciarSessao,\r\n            encerrarSessao: this.encerrarSessao\r\n\r\n        }\r\n        return(\r\n            <AuthProvider value={contexto}>\r\n                {this.props.children}\r\n            </AuthProvider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProvedorAutenticacao","import React from \"react\";\r\nimport Card from '../components/card'\r\nimport FormGroup from \"../components/form-group\"\r\nimport { withRouter } from 'react-router-dom'\r\nimport UsuarioService from \"../app/service/usuarioService\"\r\nimport {mensagemErro} from \"../components/toastr\";\r\n\r\nimport {AuthContext} from \"../main/provedorAutenticacao\"\r\n\r\nclass Login extends React.Component{\r\n    state = {\r\n        email: '',\r\n        senha: ''        \r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.service = new UsuarioService(); \r\n    }\r\n\r\n    entrar = () => {\r\n        this.service.autenticar({\r\n            email: this.state.email,\r\n            senha: this.state.senha\r\n       }).then( response => {       \r\n        this.context.iniciarSessao(response.data)\r\n        this.props.history.push('/home')\r\n       }).catch(erro => {\r\n        mensagemErro(erro.response.data)\r\n       })\r\n    }\r\n\r\n    prepareCadastrar = () => {\r\n        this.props.history.push('/cadastro-usuarios')\r\n    }\r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"row\">              \r\n                <div className=\"col-md-6\" style={ {position : 'relative', left: '300px'} }>\r\n                    <div className=\"bs-docs-section\">                   \r\n                        <Card title=\"Login\">                         \r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"bs-component\">\r\n                                        <fieldset>\r\n                                            <FormGroup label=\"Email: *\" htmlFor=\"exampleInputEmail1\">\r\n                                                <input type=\"email\" \r\n                                                       value={this.state.email}\r\n                                                       onChange={e => this.setState({email: e.target.value})}\r\n                                                       className=\"form-control\" \r\n                                                       id=\"exampleInputEmail1\"\r\n                                                       aria-describedby=\"emailHelp\" placeholder=\"Digite o Email\" />\r\n                                            </FormGroup>\r\n                                            <FormGroup label=\"Senha: *\" htmlFor=\"exampleInputPassword1\">\r\n                                                <input  type=\"password\"\r\n                                                        value={this.state.senha}\r\n                                                        onChange={e => this.setState({senha: e.target.value})}\r\n                                                        className=\"form-control\"\r\n                                                        id=\"exampleInputPassword1\"\r\n                                                        placeholder=\"Password\" />\r\n                                            </FormGroup>\r\n                                                    <button onClick={this.entrar} className=\"btn btn-success\"><i className=\"pi pi-sign-in\"></i> Entrar</button>\r\n                                                    <button onClick={this.prepareCadastrar} className=\"btn btn-danger\"><i className=\"pi pi-plus\"></i> Cadastrar</button>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>  \r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        )\r\n    }    \r\n}\r\n\r\nLogin.contextType = AuthContext\r\n\r\nexport default withRouter( Login ) ","import React from \"react\";\r\nimport Card from '../components/card'\r\nimport FormGroup from \"../components/form-group\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport UsuarioService from \"../app/service/usuarioService\"\r\nimport {mensagemErro, mensagemSucesso} from '../components/toastr'\r\n\r\nclass CadastroUsuario extends React.Component{\r\n    state = {\r\n        nome: '',\r\n        email: '',\r\n        senha: '',\r\n        senhaRepeticao: ''\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.service = new UsuarioService();\r\n    }\r\n\r\n    validar(){\r\n        const msgs = [];\r\n\r\n        if(!this.state.nome){\r\n            msgs.push('O campo Nome é obrigatório.');\r\n        }\r\n        if(!this.state.email){\r\n            msgs.push('O campo Email é obrigatório.');\r\n        }else if(!this.state.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)){\r\n            msgs.push('Informe um Email Válido.');\r\n        }\r\n\r\n        if(!this.state.senha || !this.state.senhaRepeticao){\r\n            msgs.push('Digite a senha 2x.');\r\n        }else if(this.state.senha !== this.state.senhaRepeticao){\r\n            msgs.push('As senhas não coincidem');\r\n        }\r\n\r\n        return msgs;\r\n    }\r\n\r\n\r\n    cadastrar = () => {\r\n        const msgs = this.validar();\r\n\r\n        if(msgs && msgs.length > 0){\r\n            mensagemErro(msgs[0]);\r\n            return false;\r\n        }\r\n        this.service.salvar({\r\n            nome: this.state.nome,\r\n            email: this.state.email,\r\n            senha: this.state.senha\r\n        }).then(response => {\r\n            mensagemSucesso('Usuário cadastrado com sucesso! Faça o login para acessar o sistema.');\r\n            this.props.history.push('/login');\r\n        }).catch(error => {\r\n            mensagemErro(error.response.data);\r\n        })       \r\n    }\r\n    \r\n    cancelar = () => {\r\n        this.props.history.push('/home');\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"row\">             \r\n                <div className=\"col-md-6\" style={ {position : 'relative', left: '300px'} }>\r\n                    <div className=\"bs-docs-section\">\r\n            \r\n                        <Card title=\"Cadastro de Usuário\">\r\n                            <div className=\"row\">\r\n                                 <div className=\"col-lg-12\">\r\n                                    <div className=\"bs-component\">\r\n                                        <FormGroup label=\"Nome: *\" htmlFor=\"inputNome\">\r\n                                            <input type=\"text\"\r\n                                            id=\"inputNome\"\r\n                                            className=\"form-control\"\r\n                                            name=\"nome\"\r\n                                            onChange={e => this.setState({nome: e.target.value})}/> \r\n                                        </FormGroup>   \r\n                                         <FormGroup label=\"Email: *\" htmlFor=\"inputEmail\">\r\n                                            <input type=\"email\"\r\n                                            id=\"inputEmail\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            onChange={e => this.setState({email: e.target.value})}/> \r\n                                        </FormGroup>\r\n                                        <FormGroup label=\"Senha: *\" htmlFor=\"inputSenha\">\r\n                                            <input type=\"password\"\r\n                                            id=\"inputSenha\"\r\n                                            className=\"form-control\"\r\n                                            name=\"senha\"\r\n                                            onChange={e => this.setState({senha: e.target.value})}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup label=\"Repita a Senha: *\" htmlFor=\"inputRepitaSenha\">\r\n                                            <input type=\"password\"\r\n                                            id=\"inputRepitaSenha\"\r\n                                            className=\"form-control\"\r\n                                            name=\"senha\"\r\n                                            onChange={e => this.setState({senhaRepeticao: e.target.value})}/>\r\n                                        </FormGroup>\r\n                                            <button onClick={this.cadastrar} type=\"button\" className=\"btn btn-success\"><i className=\"pi pi-save\"></i> Salvar</button>\r\n                                            <button onClick={this.cancelar} type=\"button\" className=\"btn btn-danger\"><i className=\"pi pi-times\"></i> Cancelar</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter( CadastroUsuario )","import ApiService from \"../apiservice\";\r\n\r\nclass AlunoService extends ApiService{\r\n\r\n    constructor(){\r\n        super('/api/alunos')\r\n    }\r\n    consultar(){\r\n        return this.get('/1')\r\n    }\r\n    \r\n}\r\n\r\nexport default AlunoService","import React from \"react\";\r\nimport AlunoService from \"../app/service/alunoService\"\r\nimport AuthService from \"../app/service/authService\";\r\n\r\nclass Home extends React.Component{\r\n    state = {\r\n        frequencia: 0,\r\n        professor: ''\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.service = new AlunoService(); \r\n    }\r\n\r\n    componentDidMount(){\r\n       const usuarioLogado = AuthService.obterUsuarioAutenticadoJSON();\r\n       if(usuarioLogado){\r\n        this.setState({ professor: `, ${usuarioLogado.nome}`}) \r\n       }              \r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n                  \r\n            <div id=\"homeBody\" className=\"jumbotron\">\r\n                <h1 className=\"display-3\">Bem vindo{this.state.professor}!</h1>\r\n                <p className=\"lead\">Esse é seu sistema Apreender.</p>\r\n                <hr className=\"my-4\"/>\r\n                <p>E essa é sua área administrativa, utilize um dos menus ou botões abaixo para navegar pelo sistema.</p>\r\n                <p className=\"lead\">\r\n                  <a className=\"btn btn-primary btn-lg\" \r\n                    href=\"#/login\" \r\n                    role=\"button\"><i className=\"pi pi-users\"></i>  Login</a>\r\n                  <a className=\"btn btn-danger btn-lg\" \r\n                  href=\"#/cadastro-usuarios\"\r\n                   role=\"button\"><i className=\"pi pi-pencil\"></i>  Cadastrar Usuário</a>\r\n                </p>\r\n         </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    \r\n     const options = props.lista.map((option, index) => {\r\n        return(\r\n            <option key={index} value={option.value}>{option.label}</option>\r\n        )\r\n   })\r\n\r\n    return(\r\n        <select {...props}>\r\n            {options}\r\n        </select>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default (props) => {\r\n\r\n    const rows = props.alunos.map( aluno => {\r\n        return(\r\n            <tr key={aluno.id}>\r\n                <td>{aluno.aluno.nome}</td>\r\n                <td>{aluno.aluno.turma}</td>\r\n                <td>{String(aluno.presente) === 'true' ? \r\n                      (\r\n                        <button type=\"button\" title=\"Presente\" className=\"btn btn-success\" onClick={e => props.marcarAction(aluno)}>P</button>\r\n                      ) : (\r\n                        <button type=\"button\" title=\"Faltou\"className=\"btn btn-danger\" onClick={e => props.marcarAction(aluno)}>F</button>\r\n                      )\r\n                    }</td>\r\n                <td>{aluno.motivo}</td>\r\n                <td> \r\n                        <button type=\"button\" className=\"btn btn-warning\" title=\"Informar Motivo\" disabled={ String(aluno.presente) !== 'false' } onClick={e => props.infoAction(aluno)}><i className=\"pi pi-info-circle\" ></i></button>                           \r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <table className=\"table table-hover\">\r\n            <thead>\r\n                <tr>\r\n                      <th scope=\"col\">Aluno</th>\r\n                      <th scope=\"col\">Turma</th>\r\n                      <th scope=\"col\">Presente</th>\r\n                      <th scope=\"col\">Motivo</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import ApiService from \"../apiservice\";\r\n\r\nexport default class PresencaService extends ApiService {\r\n    constructor(){\r\n        super('/api/chamadas')\r\n    }\r\n    \r\n    obterListaTurmas(){\r\n        return [\r\n             {label: 'Selecione...', value: ''},\r\n             {label: 'Turma 01', value: 'TURMA_01'},\r\n             {label: 'Turma 02', value: 'TURMA_02'},\r\n             {label: 'Turma 03', value: 'TURMA_03'},\r\n             {label: 'Turma 04', value: 'TURMA_04'},\r\n             {label: 'Turma 05', value: 'TURMA_05'}    \r\n            \r\n         ]\r\n     }\r\n\r\n     obterListaMotivos(){\r\n        return [\r\n             {label: 'Selecione...', value: ''},\r\n             {label: 'Atestado', value: 'Atestado'},\r\n             {label: 'Atraso', value: 'Atraso'},\r\n             {label: 'Chuva', value: 'Chuva'},\r\n             {label: 'Outro', value: 'Outro'}\r\n            \r\n         ]\r\n     }\r\n     obterPorId(id){\r\n        return this.get(`/${id}`)\r\n     }\r\n\r\n     atualizaStatus(id){\r\n        return this.put(`/${id}/realiza-chamada`)\r\n     }\r\n    consultar(chamadaFiltro){\r\n        let params = `?data=${chamadaFiltro.data}`;\r\n        if(chamadaFiltro.turma){\r\n            params = `${params}&turma=${chamadaFiltro.turma}`\r\n        }\r\n        return this.get(params);\r\n    }\r\n    atualizar(chamada){\r\n        return this.put(`/${chamada.id}`, chamada)\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport Card from \"../../components/card\";\r\nimport FormGroup from \"../../components/form-group\";\r\nimport SelectMenu from \"../../components/selectMenu\";\r\nimport PresencasTable from \"./presencasTable\";\r\nimport { Dialog } from 'primereact/dialog';\r\nimport PresencaService from \"../../app/service/presencaService\";\r\nimport * as messages from \"../../components/toastr\"\r\n\r\n\r\nclass RegistroPresencas extends React.Component{\r\n    state = {\r\n        turma: '',\r\n        presente: true,\r\n        motivo:'',\r\n        dataSelecionada: '',\r\n        dataFormatada: '',        \r\n        showInfoDialog: false,\r\n        disableOutro: true,    \r\n        alunoInformar: {},          \r\n        alunos: []       \r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.service = new PresencaService();\r\n    }\r\n\r\n    realizar = () => {\r\n        if(!this.state.dataSelecionada){\r\n            messages.mensagemErro('Preencha o campo data.')\r\n            return false;\r\n        }if(!this.state.turma){\r\n            messages.mensagemErro('Selecione a turma.')\r\n            return false;\r\n        }\r\n        const chamadaFiltro = {\r\n            data: this.state.dataSelecionada,\r\n            turma: this.state.turma\r\n        };\r\n        this.service.consultar(chamadaFiltro)\r\n        .then( response => {\r\n            const lista = response.data;\r\n            if(lista.length < 1){\r\n                messages.mensagmeAlerta(\"Nenhuma aula encontrada\")\r\n            }\r\n            this.setState({alunos: lista})\r\n            \r\n        }).catch(error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    marcar = (aluno) => {\r\n        this.service.atualizaStatus(aluno.id)\r\n        .then(response => {\r\n            this.setState({...response.data})\r\n            const alunos = this.state.alunos;\r\n            const index = alunos.indexOf(aluno);\r\n            if(index !== -1){\r\n                aluno['motivo'] = this.state.motivo;\r\n                aluno['presente'] = this.state.presente;\r\n                alunos[index] = aluno\r\n                this.setState({aluno});\r\n            }            \r\n            \r\n        }).catch(error =>{\r\n            console.log(error)\r\n        })\r\n        \r\n    }\r\n\r\n    salvaInfo = () => {\r\n        const chamada = {\r\n            id : this.state.alunoInformar.id,\r\n            motivo: this.state.motivo,\r\n            aluno: this.state.alunoInformar.aluno.id,\r\n            data: this.state.data,\r\n            presente: this.state.presente\r\n\r\n        };\r\n        this.service.atualizar(chamada)\r\n        .then( response => {\r\n            this.setState({showInfoDialog: false});\r\n            this.realizar();\r\n            messages.mensagemSucesso('Informações salvas com sucesso.');\r\n        }).catch(error =>{\r\n            console.log(error)\r\n        })       \r\n    }\r\n   \r\n    abrirInfo = (aluno) => {\r\n        this.service.obterPorId(aluno.id)\r\n        .then(response => { \r\n            this.setState({...response.data})\r\n            const input = this.state.dataSelecionada;\r\n            const [year, month, day] =  input.split('-')\r\n            this.setState({ dataFormatada:  `${day}/${month}/${year}`, showInfoDialog: true, alunoInformar: aluno})\r\n        }).catch(error =>{\r\n            console.log(error)\r\n        })       \r\n    }\r\n\r\n    fecharInfo = () => {\r\n        this.setState({showInfoDialog: false, alunoInformar: {}})\r\n    }\r\n\r\n    setMotivo = (event) =>{\r\n        this.setState({motivo: event.target.value});\r\n        if(event.target.value === 'Outro'){\r\n            this.setState({disableOutro: false});\r\n        }else{\r\n            this.setState({disableOutro: true});\r\n        } \r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({ [name] : value })\r\n    }\r\n    render(){\r\n        const footerContent = (\r\n            <div>\r\n                <button onClick={this.salvaInfo} className=\"btn btn-success\"><i className=\"pi pi-check\"></i> Salvar</button>\r\n                <button onClick={this.fecharInfo} className=\"btn btn-danger\"><i className=\"pi pi-times\"></i> Cancelar</button>                        \r\n            </div>\r\n        );\r\n        \r\n        const turmas = this.service.obterListaTurmas();\r\n        const motivos = this.service.obterListaMotivos();\r\n        return (\r\n                <Card title = \"Registro de Presenças\">\r\n                    <div className = \"row\">\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"bs-component\">\r\n                                <FormGroup htmlFor=\"inputData\" label=\"Data: *\">\r\n                                    <input type=\"date\" \r\n                                           className=\"form-control\"\r\n                                            id=\"inputData\"\r\n                                            value={this.state.dataSelecionada}\r\n                                            onChange={e => this.setState({dataSelecionada: e.target.value})}\r\n                                            placeholder=\"Escolha a data\"/>\r\n                                </FormGroup>\r\n                                <FormGroup htmlFor=\"inputTurma\" label=\"Turma\">\r\n                                    <SelectMenu id=\"inputTurma\"\r\n                                             value={this.state.turma}\r\n                                             name=\"turma\"\r\n                                             onChange={this.handleChange}\r\n                                             className =\"form-control\" lista={turmas}/>\r\n                                </FormGroup>                               \r\n                                    <button onClick={this.realizar}\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-success\">\r\n                                            <i className=\"pi pi-search\"></i> Buscar</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"bs-component\">\r\n                                    <PresencasTable alunos={this.state.alunos} marcarAction = {this.marcar} infoAction= {this.abrirInfo}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    <div>\r\n                        <Dialog header=\"Informar motivo\"\r\n                                visible={this.state.showInfoDialog}\r\n                                style={{ width: '50vw' }}\r\n                                onHide={() => this.setState({showInfoDialog: false})}\r\n                                footer={footerContent}>\r\n                                    {this.state.alunoInformar.aluno && (\r\n                                    <p className=\"lead\">Nome: {this.state.alunoInformar.aluno.nome}</p>)}\r\n                                    <p className=\"lead\">Data: {this.state.dataFormatada}</p>\r\n                                        <FormGroup htmlFor=\"inputMotivo\" label=\"Motivo\">\r\n                                                <SelectMenu id=\"inputMotivo\"\r\n                                                            value={this.state.motivo}\r\n                                                            onChange={this.setMotivo}\r\n                                                            className =\"form-control\" lista={motivos}/>\r\n                                        </FormGroup>\r\n                                        <FormGroup label=\"Outro: \" htmlFor=\"inputOutro\">\r\n                                                <input type=\"text\"\r\n                                                        id=\"inputOutro\"\r\n                                                        className=\"form-control\"\r\n                                                        disabled={this.state.disableOutro}\r\n                                                        name=\"motivo\"\r\n                                                        onChange={this.handleChange} />                                                                                 \r\n                                        </FormGroup>   \r\n                        </Dialog>\r\n                    </div>\r\n                </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegistroPresencas;","import React from \"react\";\r\nimport Login from \"../views/login\";\r\nimport CadastroUsuario from \"../views/cadastroUsuario\";\r\nimport Home from '../views/home'\r\nimport RegistroPresencas from \"../views/presencas/registro-presencas\";\r\nimport {Route, Switch, HashRouter, Redirect  } from 'react-router-dom'\r\nimport { AuthConsumer } from \"./provedorAutenticacao\";\r\n\r\n\r\nfunction RotaAutenticada( {component: Component, isUsuarioAutenticado, ...props} ){\r\n    return (\r\n        <Route {...props} render={(componentProps) => {\r\n            if(isUsuarioAutenticado){\r\n                return(\r\n                    <Component {...componentProps} />\r\n                )\r\n            }else{\r\n                return(\r\n                    <Redirect to={{pathname: '/home', state: {from: componentProps.location}}} />\r\n                )\r\n            }\r\n        }}/>\r\n    )\r\n}\r\n\r\nfunction Rotas(props){\r\n    return(\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login}/>\r\n                <Route path=\"/cadastro-usuarios\" component={CadastroUsuario}/>\r\n\r\n                <Route  path=\"/home\" component={Home}/>\r\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/registro-presencas\" component={RegistroPresencas}/>\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default () => (\r\n    <AuthConsumer>\r\n        { (context) => (<Rotas isUsuarioAutenticado={context.isAutenticado} />) }\r\n    </AuthConsumer>\r\n)","import React from \"react\";\r\n\r\nfunction NavBarItem({render, ...props }) {\r\n\r\n    if(render){\r\n        return(\r\n            <li className=\"nav-item\">\r\n                <a onClick={props.onClick} className=\"nav-link\" href={props.href}>{props.label}</a>\r\n              </li>\r\n        )\r\n    }else{\r\n        return false;\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport default NavBarItem","import React from \"react\";\r\nimport NavBarItem from \"./navbarItem\";\r\nimport { AuthConsumer } from \"../main/provedorAutenticacao\";\r\nimport logo from \"../imgs/logo.png\"\r\n\r\n\r\n\r\n\r\nfunction NavBar(props){\r\n    return(\r\n        <div className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\">\r\n          <div className=\"container\">\r\n            <a href=\"#/home\" className=\"navbar-brand\"><img id=\"logo\" src={logo} alt=\"logo\"/></a>\r\n              <button className=\"navbar-toggler\" \r\n                      type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" \r\n                      aria-controls=\"navbarResponsive\" aria-expanded=\"false\" \r\n                      aria-label=\"Toggle navigation\">\r\n                      <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul className=\"navbar-nav\">\r\n              <NavBarItem render={props.isUsuarioAutenticado} href=\"#/home\" label=\"Home\"/>\r\n              <NavBarItem render={props.isUsuarioAutenticado} href=\"#/registro-presencas\" label=\"Registrar Presenças\"/>\r\n              <NavBarItem render={props.isUsuarioAutenticado} onClick={props.deslogar} href=\"#/login\" label=\"Sair\"/>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default () => (\r\n  <AuthConsumer>\r\n      { (context) => (<NavBar isUsuarioAutenticado={context.isAutenticado} deslogar={context.encerrarSessao} />) }\r\n  </AuthConsumer>\r\n)\r\n\r\n","import React from \"react\";\nimport 'bootswatch/dist/flatly/bootstrap.css'\nimport '../custom.css'\nimport 'toastr/build/toastr.css'\nimport \"primereact/resources/themes/lara-light-blue/theme.css\";\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'toastr/build/toastr.min.js'\nimport Rotas from \"./rotas\";\nimport NavBar from \"../components/navbar\"\nimport ProvedorAutenticacao from \"./provedorAutenticacao\"\n\nclass App extends React.Component {\n  render(){\n    return(\n      \n      <ProvedorAutenticacao>\n        <NavBar/>\n          <div className=\"container\">\n            <Rotas/>\n          </div>\n          </ProvedorAutenticacao>   \n    )\n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}